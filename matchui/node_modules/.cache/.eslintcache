[{"C:\\Users\\Senyo\\IdeaProjects\\MatchHub\\matchui\\src\\index.tsx":"1","C:\\Users\\Senyo\\IdeaProjects\\MatchHub\\matchui\\src\\reportWebVitals.ts":"2","C:\\Users\\Senyo\\IdeaProjects\\MatchHub\\matchui\\src\\App.tsx":"3","C:\\Users\\Senyo\\IdeaProjects\\MatchHub\\matchui\\src\\components\\LiveMatches.tsx":"4","C:\\Users\\Senyo\\IdeaProjects\\MatchHub\\matchui\\src\\components\\UpcomingMatches.tsx":"5","C:\\Users\\Senyo\\IdeaProjects\\MatchHub\\matchui\\src\\components\\CountryLeagues.tsx":"6","C:\\Users\\Senyo\\IdeaProjects\\MatchHub\\matchui\\src\\components\\EndedMatches.tsx":"7","C:\\Users\\Senyo\\IdeaProjects\\MatchHub\\matchui\\src\\components\\Navbar.tsx":"8"},{"size":645,"mtime":1693253623360,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1693245774222,"results":"11","hashOfConfig":"10"},{"size":994,"mtime":1694357946545,"results":"12","hashOfConfig":"10"},{"size":5405,"mtime":1694359040620,"results":"13","hashOfConfig":"10"},{"size":4389,"mtime":1694359040575,"results":"14","hashOfConfig":"10"},{"size":1939,"mtime":1693990945147,"results":"15","hashOfConfig":"10"},{"size":4806,"mtime":1694359040529,"results":"16","hashOfConfig":"10"},{"size":752,"mtime":1694357765633,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10q46mn",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Senyo\\IdeaProjects\\MatchHub\\matchui\\src\\index.tsx",[],[],"C:\\Users\\Senyo\\IdeaProjects\\MatchHub\\matchui\\src\\reportWebVitals.ts",[],[],"C:\\Users\\Senyo\\IdeaProjects\\MatchHub\\matchui\\src\\App.tsx",["46","47"],[],"import React from 'react';\nimport './App.css';\nimport {Container, Flex, Grid, GridItem, SimpleGrid} from \"@chakra-ui/react\";\nimport Navbar from \"./components/Navbar\";\nimport LiveMatches from \"./components/LiveMatches\";\nimport UpcomingMatches from \"./components/UpcomingMatches\";\nimport EndedMatches from \"./components/EndedMatches\";\nimport CountryLeagues from \"./components/CountryLeagues\";\n\n// Contains all the various components to make up the complete page/app\n\nfunction App() {\n  return (\n    <Container bg='#090116' minHeight='100vh' minWidth='100%'>\n      <header>\n        <Navbar/>\n      </header>\n\n      <body className='App'>\n      <CountryLeagues/>\n\n      <Flex mt='20px' bg='#090116' minH='max-content'>\n\n          <SimpleGrid columns={1} bg='transparent' minWidth='100%' borderRadius='10px'>\n              <LiveMatches/>\n              <UpcomingMatches/>\n              <EndedMatches/>\n          </SimpleGrid>\n\n      </Flex>\n\n      </body>\n    </Container>\n  );\n}\nexport default App;\n",[],"C:\\Users\\Senyo\\IdeaProjects\\MatchHub\\matchui\\src\\components\\LiveMatches.tsx",["48","49","50"],[],"import React, {useEffect, useState} from \"react\";\r\nimport axios from 'axios'\r\nimport {\r\n    Box, Button,\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Collapse,\r\n    Heading,\r\n    Link,\r\n    ListItem, Text,\r\n    UnorderedList,\r\n    useDisclosure\r\n} from \"@chakra-ui/react\";\r\n\r\ninterface test{\r\n    name: string;\r\n}\r\n\r\n// Component to fetch and display live matches from the api\r\n\r\nfunction LiveMatches(){\r\n\r\n    const { isOpen, onToggle } = useDisclosure()\r\n\r\n    const [ongoing, setOngoing] = useState([{\r\n                                                                                                    match: '',\r\n                                                                                                    date: '',\r\n                                                                                                    league: ''\r\n                                                                                                            }]);\r\n\r\n    useEffect(() => {\r\n\r\n// Fetches the data with api variables and stores them as variables and objects\r\n\r\n        const fetching = async () => {\r\n\r\n            const url = 'https://api-football-v1.p.rapidapi.com/v3/fixtures?live=all';\r\n            const options = {\r\n                method: 'GET',\r\n                headers: {\r\n                    'X-RapidAPI-Key': 'cf2e5b804emshefb82ef54fec80dp109415jsne25f7e2abcca',\r\n                    'X-RapidAPI-Host': 'api-football-v1.p.rapidapi.com'\r\n                }\r\n            };\r\n\r\n            try {\r\n                const response = await fetch(url, options);\r\n                const result = await response.json();\r\n                // console.log(result.response);\r\n\r\n                let dataArray = result.response;\r\n                let stillOn = ongoing;\r\n\r\n                for(let i = 0; i < dataArray.length; i++){\r\n                    let homeTeam = dataArray[i].teams.home.name;\r\n                    let awayTeam = dataArray[i].teams.away.name;\r\n                    let homeTeamGoals = dataArray[i].goals.home;\r\n                    let awayTeamGoals = dataArray[i].goals.away;\r\n                    let datetime = dataArray[i].fixture.date;\r\n                    let league = dataArray[i].league.name;\r\n                    stillOn[i] = {match: homeTeam.concat(' ', homeTeamGoals, ' - ', awayTeamGoals, ' ', awayTeam),\r\n                                    date: datetime, league: league};\r\n                }\r\n\r\n                setOngoing(stillOn)\r\n\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n\r\n        }\r\n\r\n         // fetching()\r\n    }, []);\r\n\r\n\r\n    const save = async (index:number) => {\r\n        try {\r\n            const response = await axios.post('http://127.0.0.1:2000/api/live_games/', ongoing[index]);\r\n            console.log(response.data);\r\n            // Process the response data or perform other operations\r\n        } catch (error) {\r\n            console.error(error);\r\n            // Handle errors, if any\r\n        }\r\n    }\r\n\r\n\r\n\r\n// Returns the gotten data from their stored variables and objects to the page\r\n\r\n    return (\r\n\r\n        <Card alignItems='center' bg='white' minH='max-content' minW='max-content' mb='10px' ml='15px' mr='15px' mt='15px'>\r\n\r\n            <CardHeader>\r\n\r\n                <Heading bg='#090116' color='#7b7b7b' size='lg' textAlign='center'>\r\n                    Live Matches\r\n                </Heading>\r\n\r\n            </CardHeader>\r\n\r\n            <CardBody>\r\n\r\n                <UnorderedList justifyContent='center' listStyleType='none' spacing={5}>\r\n                    {ongoing.map((playing, index) =>\r\n                        <ListItem color='whitesmoke' mt='20px' textAlign='center'>\r\n\r\n                            <Link key={index} onClick={onToggle}>\r\n                                {playing.match}\r\n                            </Link>\r\n\r\n                            <Collapse in={isOpen} animateOpacity>\r\n                                <Box\r\n                                    p='40px'\r\n                                    color='white'\r\n                                    mt='4'\r\n                                    bg='#011021'\r\n                                    rounded='md'\r\n                                    shadow='md'\r\n                                >\r\n                                    <Text bg='transparent'> Match : {playing.match} </Text>\r\n                                    <Text bg='transparent'> Match Date : {playing.date} </Text>\r\n                                    <Text bg='transparent'> Match League : {playing.league} </Text>\r\n\r\n                                    <Button onClick={() => save(index)} colorScheme='teal' mt='25px'> Save </Button>\r\n                                </Box>\r\n                            </Collapse>\r\n\r\n                        </ListItem>\r\n                    )}\r\n                </UnorderedList>\r\n\r\n            </CardBody>\r\n\r\n\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default LiveMatches\r\n\r\n/*\r\n*\r\n* treat it as clubs\r\n* Be in charge and take charge\r\n* children stay in the session\r\n* registered care provider\r\n* scratch and minecraft coding\r\n* dismiss children carefully to the right person\r\n* make sure all children on your list are accounted for\r\n* familiarise yourself with dsl or slt\r\n* REGISTER AND DISMISSAL ARE VERY IMPORTANT\r\n* make a get requet to matches\r\n* stages key loop and get\r\n*/\r\n","C:\\Users\\Senyo\\IdeaProjects\\MatchHub\\matchui\\src\\components\\UpcomingMatches.tsx",["51","52"],[],"import {\r\n    Box, Button,\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Collapse,\r\n    Heading,\r\n    Link,\r\n    ListItem, Text,\r\n    UnorderedList,\r\n    useDisclosure\r\n} from \"@chakra-ui/react\";\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\n// Component to fetch and display upcoming matches from the api\r\n\r\nfunction UpcomingMatches(){\r\n\r\n    const { isOpen, onToggle } = useDisclosure()\r\n\r\n    const [nextTeams, setNextTeams] = useState([{\r\n                                                                                                        match: '',\r\n                                                                                                        date: '',\r\n                                                                                                        league: ''\r\n                                                                                                                }]);\r\n\r\n    useEffect(() => {\r\n\r\n// Fetches the data with api variables and stores them as variables and objects\r\n\r\n        const fetching = async () => {\r\n\r\n\r\n            const url = 'https://api-football-v1.p.rapidapi.com/v3/fixtures?next=50';\r\n            const options = {\r\n                method: 'GET',\r\n                headers: {\r\n                    'X-RapidAPI-Key': 'cf2e5b804emshefb82ef54fec80dp109415jsne25f7e2abcca',\r\n                    'X-RapidAPI-Host': 'api-football-v1.p.rapidapi.com'\r\n                }\r\n            };\r\n\r\n            try {\r\n                const response = await fetch(url, options);\r\n                const result = await response.json();\r\n                // console.log(result);\r\n\r\n                let dataArray = result.response;\r\n                let upcoming = nextTeams;\r\n\r\n                for(let i = 0; i < 5; i++){\r\n                    let homeTeam = dataArray[i].teams.home.name;\r\n                    let awayTeam = dataArray[i].teams.away.name;\r\n                    let datetime = dataArray[i].fixture.date;\r\n                    let league = dataArray[i].league.name;\r\n                    upcoming[i] = {match: homeTeam.concat(' - ', awayTeam),\r\n                                    date: datetime,\r\n                                    league: league};\r\n                }\r\n\r\n                setNextTeams(upcoming)\r\n                // console.log(nextTeams)\r\n\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n\r\n        }\r\n        // fetching()\r\n    }, []);\r\n\r\n// Returns the gotten data from their stored variables and objects to the page\r\n\r\n    return (\r\n        <Card alignItems='center' bg='white' minH='max-content' minW='max-content' mb='10px' ml='15px' mr='15px' mt='10px'>\r\n            <CardHeader>\r\n                <Heading bg='#090116' color='#7b7b7b' size='lg' textAlign='center'>\r\n                    Upcoming Matches\r\n                </Heading>\r\n            </CardHeader>\r\n\r\n            <CardBody>\r\n                <UnorderedList justifyContent='center' listStyleType='none' spacing={5}>\r\n                    {nextTeams.map((next, index) =>\r\n                        <ListItem color='whitesmoke' mt='20px' textAlign='center'>\r\n                            <Link key={index} onClick={onToggle}>\r\n                                {next.match}\r\n                            </Link>\r\n                            <Collapse in={isOpen} animateOpacity>\r\n                                <Box\r\n                                    p='40px'\r\n                                    color='white'\r\n                                    mt='4'\r\n                                    bg='#011021'\r\n                                    rounded='md'\r\n                                    shadow='md'\r\n                                >\r\n                                    <Text bg='transparent'> Match : {next.match} </Text>\r\n                                    <Text bg='transparent'> Match Date : {next.date} </Text>\r\n                                    <Text bg='transparent'> Match League : {next.league} </Text>\r\n\r\n                                    <Button colorScheme='teal' mt='25px'> Save </Button>\r\n                                </Box>\r\n                            </Collapse>\r\n                        </ListItem>\r\n                    )}\r\n                </UnorderedList>\r\n            </CardBody>\r\n\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default UpcomingMatches;","C:\\Users\\Senyo\\IdeaProjects\\MatchHub\\matchui\\src\\components\\CountryLeagues.tsx",["53"],[],"C:\\Users\\Senyo\\IdeaProjects\\MatchHub\\matchui\\src\\components\\EndedMatches.tsx",["54","55","56"],[],"C:\\Users\\Senyo\\IdeaProjects\\MatchHub\\matchui\\src\\components\\Navbar.tsx",[],[],{"ruleId":"57","severity":1,"message":"58","line":3,"column":26,"nodeType":"59","messageId":"60","endLine":3,"endColumn":30},{"ruleId":"57","severity":1,"message":"61","line":3,"column":32,"nodeType":"59","messageId":"60","endLine":3,"endColumn":40},{"ruleId":"57","severity":1,"message":"62","line":16,"column":11,"nodeType":"59","messageId":"60","endLine":16,"endColumn":15},{"ruleId":"57","severity":1,"message":"63","line":36,"column":15,"nodeType":"59","messageId":"60","endLine":36,"endColumn":23},{"ruleId":"64","severity":1,"message":"65","line":75,"column":8,"nodeType":"66","endLine":75,"endColumn":10,"suggestions":"67"},{"ruleId":"57","severity":1,"message":"63","line":31,"column":15,"nodeType":"59","messageId":"60","endLine":31,"endColumn":23},{"ruleId":"64","severity":1,"message":"68","line":70,"column":8,"nodeType":"66","endLine":70,"endColumn":10,"suggestions":"69"},{"ruleId":"57","severity":1,"message":"70","line":8,"column":20,"nodeType":"59","messageId":"60","endLine":8,"endColumn":24},{"ruleId":"57","severity":1,"message":"71","line":20,"column":21,"nodeType":"59","messageId":"60","endLine":20,"endColumn":29},{"ruleId":"57","severity":1,"message":"63","line":32,"column":15,"nodeType":"59","messageId":"60","endLine":32,"endColumn":23},{"ruleId":"64","severity":1,"message":"72","line":73,"column":8,"nodeType":"66","endLine":73,"endColumn":10,"suggestions":"73"},"@typescript-eslint/no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'GridItem' is defined but never used.","'test' is defined but never used.","'fetching' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'ongoing'. Either include it or remove the dependency array.","ArrayExpression",["74"],"React Hook useEffect has a missing dependency: 'nextTeams'. Either include it or remove the dependency array.",["75"],"'List' is defined but never used.","'onToggle' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'past'. Either include it or remove the dependency array.",["76"],{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},"Update the dependencies array to be: [ongoing]",{"range":"83","text":"84"},"Update the dependencies array to be: [nextTeams]",{"range":"85","text":"86"},"Update the dependencies array to be: [past]",{"range":"87","text":"88"},[2595,2597],"[ongoing]",[2444,2446],"[nextTeams]",[2515,2517],"[past]"]